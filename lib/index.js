// Generated by CoffeeScript 1.4.0
var LESSCompiler, less, progeny, sysPath;

less = require('less');

sysPath = require('path');

progeny = require('progeny');

module.exports = LESSCompiler = (function() {

  LESSCompiler.prototype.brunchPlugin = true;

  LESSCompiler.prototype.type = 'stylesheet';

  LESSCompiler.prototype.extension = 'less';

  function LESSCompiler(config) {
    this.config = config;
    this.getDependencies = progeny({
      rootPath: this.config.paths.root
    });
  }

  LESSCompiler.prototype.compile = function(data, path, callback) {
    var parser, _ref, _ref1,
      _this = this;
    parser = new less.Parser({
      paths: [this.config.paths.root, sysPath.dirname(path)],
      filename: path,
      dumpLineNumbers: this.config.optimize ? null : (_ref = this.config.plugins) != null ? (_ref1 = _ref.less) != null ? _ref1.dumpLineNumbers : void 0 : void 0
    });
    return parser.parse(data, function(error, tree) {
      var err, result;
      if (error != null) {
        return callback(error.message);
      }
      result = null;
      err = null;
      try {
        result = tree.toCSS();
      } catch (ex) {
        err = "" + ex.type + "Error:" + ex.message;
        if (ex.filename) {
          err += " in '" + ex.filename + ":" + ex.line + ":" + ex.column + "'";
        }
      }
      return callback(err, result);
    });
  };

  return LESSCompiler;

})();
